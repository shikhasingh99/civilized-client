{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.scss","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/my-nav/my-nav.component.html","webpack:///./src/app/my-nav/my-nav.component.scss","webpack:///./src/app/my-nav/my-nav.component.ts","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.scss","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/sign-up/sign-up.component.html","webpack:///./src/app/sign-up/sign-up.component.scss","webpack:///./src/app/sign-up/sign-up.component.ts","webpack:///./src/app/upload-resume/upload-resume.component.html","webpack:///./src/app/upload-resume/upload-resume.component.scss","webpack:///./src/app/upload-resume/upload-resume.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { HomeComponent } from './home/home.component';\nimport { ProfileComponent } from './profile/profile.component';\nconst routes: Routes = [\n    { path: 'login', component: LoginComponent },\n    { path: 'sign-up', component: SignUpComponent },\n    { path: 'home', component: HomeComponent },\n    { path: 'profile', component: ProfileComponent },\n{ path: '**', component: SignUpComponent }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"<div class=\\\"container\\\">\\n\\n<!--  <app-my-nav></app-my-nav>  \\n -->\\n</div>\\n\\n<router-outlet>\\n  \\n\\n</router-outlet>\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'newproject';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n import{FormsModule} from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { SignUpComponent } from './sign-up/sign-up.component';\nimport { LoginComponent } from './login/login.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MyNavComponent } from './my-nav/my-nav.component';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule } from '@angular/material';\n\nimport { HomeComponent } from './home/home.component';\nimport { UploadResumeComponent } from './upload-resume/upload-resume.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SignUpComponent,\n    LoginComponent,\n    MyNavComponent,\n    \n    HomeComponent,\n    \n    UploadResumeComponent,\n    \n    ProfileComponent,\n    \n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    LayoutModule,\n    MatToolbarModule,\n    MatButtonModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<!-- <p>\\n \\n  \\n</p> -->\\n<div>\\n<app-my-nav></app-my-nav>\\n\\n</div>\\n<app-upload-resume></app-upload-resume>\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvaG9tZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.scss']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \" <div class=\\\"row\\\">\\n \\t<div class=\\\"col s6 offset-s3\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t <div class=\\\"sm-jumbotron center-align\\\">\\n\\t\\t\\t\\t<h3>Sign In</h3>\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t <form class=\\\"col s12 white\\\" #UserRegistrationForm='ngForm'>\\n\\t\\t\\t\\t <div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t<div class=\\\"input-field col s12\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"email\\\" class=\\\"validation\\\" name=\\\"Email\\\" required>\\n\\t\\t\\t\\t\\t\\t<label>Email</label>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t  <div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-field col s12\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"validation\\\" name=\\\"Password\\\" required>\\n\\t\\t\\t\\t\\t\\t<label>Password</label>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-field col s12\\\">\\n\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/home']\\\" ><button class=\\\"btn-large btn-submit\\\" [disabled]=\\\"!userRegistrationForm.valid\\\" type=\\\"submit\\\">Submit</button></a>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col s12 center-align\\\">\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t\\t<a href=\\\"#\\\">Sign Up</a>\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</form>  \\n\\t\\t\\t\\n\\t\\t</div>  \\n\\t\\t\\n\\n\\t</div> \\n\\n\\n\\n</div>  \\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5zY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \" <!-- <app-sidebar></app-sidebar>  -->\\n<style type=\\\"text/css\\\">\\n  .navcolor{\\nbackground-color:#00264d;\\n}\\n\\n</style>\\n<mat-sidenav-container class=\\\"sidenav-container\\\">\\n  <nav>\\n    <div class=\\\"nav-wrapper navcolor\\\">\\n      <a href=\\\"#\\\" class=\\\"brand-logo\\\">Logo</a>\\n      <ul id=\\\"nav-mobile\\\" class=\\\"right hide-on-med-and-down\\\">\\n        <!-- <li><a href=\\\"sass.html\\\">Sass</a></li>\\n        <li><a href=\\\"badges.html\\\">Components</a></li>\\n        <li><a href=\\\"collapsible.html\\\">JavaScript</a></li> -->\\n      </ul>\\n    </div>\\n  </nav>\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport=\\\"true\\\"\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n      [opened]=\\\"!(isHandset$ | async)\\\"> \\n    <!-- <mat-toolbar>Menu</mat-toolbar> -->\\n    <mat-nav-list>\\n      <a mat-list-item [routerLink]=\\\"['/profile']\\\">My Profile</a>\\n      <a mat-list-item href=\\\"#\\\">My Inbox</a>\\n      <a mat-list-item href=\\\"#\\\">My Output</a>\\n      <a mat-list-item href=\\\"#\\\">Message</a>\\n      <a mat-list-item href=\\\"#\\\">My Payment</a>\\n      <a mat-list-item href=\\\"#\\\">My Issue</a>\\n    </mat-nav-list>\\n  </mat-sidenav>\\n  <button\\n        type=\\\"button\\\"\\n        aria-label=\\\"Toggle sidenav\\\"\\n        mat-icon-button\\n        (click)=\\\"drawer.toggle()\\\"\\n        *ngIf=\\\"isHandset$ | async\\\">\\n        <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n      </button>\\n  \\n</mat-sidenav-container>\\n\"","module.exports = \".sidenav-container {\\n  height: 100%; }\\n\\n.sidenav {\\n  width: 200px; }\\n\\n.sidenav .mat-toolbar {\\n  background: inherit; }\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1; }\\n\\n.navcolor {\\n  background-color: #00264d; }\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbXktbmF2L0Q6XFxub2RlXFxjdmx6XFxjbGllbnQvc3JjXFxhcHBcXG15LW5hdlxcbXktbmF2LmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UsYUFBWSxFQUViOztBQUVEO0VBQ0UsYUFBWSxFQUViOztBQUVEO0VBQ0Usb0JBQW1CLEVBQ3BCOztBQUVEO0VBQ0UseUJBQWdCO0VBQWhCLGlCQUFnQjtFQUNoQixPQUFNO0VBQ04sV0FBVSxFQUNYOztBQUNEO0VBQ0EsMEJBQXdCLEVBQ3ZCIiwiZmlsZSI6InNyYy9hcHAvbXktbmF2L215LW5hdi5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIi5zaWRlbmF2LWNvbnRhaW5lciB7XG4gIGhlaWdodDogMTAwJTtcblxufVxuXG4uc2lkZW5hdiB7XG4gIHdpZHRoOiAyMDBweDtcbiAgXG59XG5cbi5zaWRlbmF2IC5tYXQtdG9vbGJhciB7XG4gIGJhY2tncm91bmQ6IGluaGVyaXQ7XG59XG5cbi5tYXQtdG9vbGJhci5tYXQtcHJpbWFyeSB7XG4gIHBvc2l0aW9uOiBzdGlja3k7XG4gIHRvcDogMDtcbiAgei1pbmRleDogMTtcbn1cbi5uYXZjb2xvcntcbmJhY2tncm91bmQtY29sb3I6IzAwMjY0ZDtcbn1cbiJdfQ== */\"","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Component({\n  selector: 'app-my-nav',\n  templateUrl: './my-nav.component.html',\n  styleUrls: ['./my-nav.component.scss'],\n})\nexport class MyNavComponent {\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches)\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver) {}\n\n}\n","module.exports = \" <div class=\\\"row\\\">\\n \\t<div class=\\\"col s6 offset-s3\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t <div class=\\\"sm-jumbotron center-align\\\">\\n\\t\\t\\t\\t<h3>Profile</h3>\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t <form class=\\\"col s12 white\\\" #UserRegistrationForm='ngForm'>\\n\\t\\t\\t\\t <div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-field col s12\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"text\\\" class=\\\"validation\\\" name=\\\"UserName\\\" required >\\n\\t\\t\\t\\t\\t\\t<label>User Name</label>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-field col s12\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"password\\\" class=\\\"validation\\\" name=\\\"Password\\\" required>\\n\\t\\t\\t\\t\\t\\t<label>Password</label>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t  <div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-field col s12\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"email\\\" class=\\\"validation\\\" name=\\\"Email\\\" required>\\n\\t\\t\\t\\t\\t\\t<label>Email</label>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-field col s12\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn-large btn-submit\\\" [disabled]=\\\"!userRegistrationForm.valid\\\" type=\\\"submit\\\">Submit</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col s12 center-align\\\">\\n\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/login']\\\" class=\\\"btn btn-link\\\">Sign In</a>\\n\\t\\t\\t\\t\\t\\t\\n<!-- \\t\\t\\t\\t\\t\\t<a ng-href=\\\"./login/login\\\">Sign In</a>\\n -->\\t\\t\\t\\t\\t\\t\\n  <!-- <a [routerLink]=\\\"['/login']\\\" >Sign In</a> -->\\n \\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t</form>  \\n\\t\\t\\t\\n\\t\\t</div>  \\n\\t\\t\\n\\n\\t</div> \\n\\n\\n\\n</div>  \\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Byb2ZpbGUvcHJvZmlsZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"<h1 class=\\\"page-header\\\">Register Page</h1>\\n\\n<!-- Custom Success/Error Message -->\\n<div class=\\\"row show-hide-message\\\">\\n  <div [ngClass]=\\\"messageClass\\\">\\n    {{ message }}\\n  </div>\\n</div>\\n\\n<!-- Registration Form -->\\n<form [formGroup]=\\\"form\\\" (submit)=\\\"onRegisterSubmit()\\\">\\n\\n  <!-- Username Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"username\\\">Username</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.username.errors && form.controls.username.dirty) || (!usernameValid && form.controls.username.dirty), 'has-success': !form.controls.username.errors && usernameValid}\\\">\\n      <input type=\\\"text\\\" name=\\\"username\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Username\\\" formControlName=\\\"username\\\" (blur)=\\\"checkUsername()\\\"  />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.username.errors?.required && form.controls.username.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"form.controls.username.errors?.minlength && form.controls.username.dirty || form.controls.username.errors?.maxlength && form.controls.username.dirty \\\">Minimum characters: 3, Maximum characters: 15</li>\\n        <li *ngIf=\\\"form.controls.username.errors?.validateUsername && form.controls.username.dirty\\\">Username must not have any special characters</li>\\n        <li *ngIf=\\\"usernameMessage\\\">{{ usernameMessage }}</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Email Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"email\\\">Email</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.email.errors && form.controls.email.dirty) || (!emailValid && form.controls.email.dirty), 'has-success': !form.controls.email.errors && emailValid}\\\">\\n      <input type=\\\"text\\\" name=\\\"email\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Email\\\" formControlName=\\\"email\\\" (blur)=\\\"checkEmail()\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.email.errors?.required && form.controls.email.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"(form.controls.email.errors?.minlength && form.controls.email.dirty || form.controls.email.errors?.maxlength && form.controls.email.dirty ) && form.controls.email.dirty\\\">Minimum characters: 5, Maximum characters: 30</li>\\n        <li *ngIf=\\\"form.controls.email.errors?.validateEmail && form.controls.email.dirty\\\">This must be a valid e-mail</li>\\n        <li *ngIf=\\\"emailMessage\\\">{{ emailMessage}}</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Password Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"password\\\">Password</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.password.errors && form.controls.password.dirty), 'has-success': !form.controls.password.errors}\\\">\\n      <input type=\\\"password\\\" name=\\\"password\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Password\\\" formControlName=\\\"password\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.password.errors?.required && form.controls.password.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"form.controls.password.errors?.minlength && form.controls.password.dirty || form.controls.password.errors?.maxlength && form.controls.password.dirty \\\">Minimum characters: 8, Maximum characters: 35</li>\\n        <li *ngIf=\\\"form.controls.password.errors?.validatePassword && form.controls.password.dirty\\\">Password must be at least 8 characters but no more than 35</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Confirm Password Input -->\\n  <div class=\\\"form-group\\\">\\n    <label for=\\\"confirm\\\">Confirm Password</label>\\n    <div [ngClass]=\\\"{'has-error': (form.controls.confirm.errors && form.controls.confirm.dirty) || (form.errors?.matchingPasswords && form.controls.confirm.dirty), 'has-success': !form.controls.confirm.errors && !form.errors?.matchingPasswords}\\\">\\n      <input type=\\\"password\\\" name=\\\"confirm\\\" class=\\\"form-control\\\" autocomplete=\\\"off\\\" placeholder=\\\"*Confirm Password\\\" formControlName=\\\"confirm\\\" />\\n      <!-- Validation -->\\n      <ul class=\\\"help-block\\\">\\n        <li *ngIf=\\\"form.controls.confirm.errors?.required && form.controls.confirm.dirty\\\">This field is required</li>\\n        <li *ngIf=\\\"form.errors?.matchingPasswords && form.controls.confirm.dirty\\\">Password do not match</li>\\n      </ul>\\n    </div>\\n  </div>\\n\\n  <!-- Submit Input -->\\n  <input [disabled]=\\\"!form.valid || processing || !emailValid || !usernameValid\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\" />\\n\\n</form>\\n<!-- Registration Form /-->\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3NpZ24tdXAvc2lnbi11cC5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport{User} from '../shared/user.model';\nimport{ NgForm} from '@angular/forms';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.scss']\n})\nexport class SignUpComponent implements OnInit {\nuser:User;\n  constructor() { }\n\n  ngOnInit() {\n  this.resetForm();\n  }\nresetForm(form?:NgForm){\nif(form != null)\n\tform.reset();\n\tthis.user={\n\tUserName:'',\n\tPassword:'',\n\tEmail:''\n\n\t}\n}\n}\n","module.exports = \" <style type=\\\"text/css\\\">\\n \\tdiv.sm-jumbotron{\\n\\tmargin:0px;\\n\\tpadding:.5rem;\\n\\tbackground-color:#ffffff;\\n\\tcolor:#000;\\n}\\n </style>\\n <div class=\\\"row\\\">\\n \\t<div class=\\\"col s6 offset-s3\\\">\\n\\t\\t<div class=\\\"card\\\">\\n\\t\\t\\t <div class=\\\"sm-jumbotron center-align\\\">\\n\\t\\t\\t \\t<img src=\\\"../assets/images/resume_icon.png\\\" style=\\\"width: 80px;height: 70px\\\">\\n\\t\\t\\t\\t<h3>Upload Resume</h3>\\n\\t\\t\\t\\t\\n\\t\\t\\t</div>\\n\\t\\t\\t <form class=\\\"col s12 white\\\" #UserRegistrationForm='ngForm'>\\n\\t\\t\\t\\t <div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-field col s12\\\">\\n\\t\\t\\t\\t\\t\\t<input type=\\\"file\\\" class=\\\"validation\\\" name=\\\"UserName\\\" required >\\n\\t\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\n\\n\\t\\t\\t\\t\\n\\t\\t\\t\\t<div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"input-field col s12\\\">\\n\\t\\t\\t\\t\\t\\t<button class=\\\"btn-large btn-submit\\\" [disabled]=\\\"!userRegistrationForm.valid\\\" type=\\\"submit\\\">Upload</button>\\n\\t\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div>\\n\\t\\t\\t\\t<!-- <div class=\\\"row\\\">\\n\\t\\t\\t\\t\\t<div class=\\\"col s12 center-align\\\">\\n\\t\\t\\t\\t\\t\\t<a [routerLink]=\\\"['/login']\\\" class=\\\"btn btn-link\\\">Sign In</a>\\n\\t\\t\\t\\t\\t\\t -->\\n<!-- \\t\\t\\t\\t\\t\\t<a ng-href=\\\"./login/login\\\">Sign In</a>\\n -->\\t\\t\\t\\t\\t\\t\\n  <!-- <a [routerLink]=\\\"['/login']\\\" >Sign In</a> -->\\n \\t\\t\\t\\t\\t<!-- </div>\\n\\t\\t\\t\\t\\t\\n\\t\\t\\t\\t</div> -->\\n\\t\\t\\t</form>  \\n\\t\\t\\t\\n\\t\\t</div>  \\n\\t\\t\\n\\n\\t</div> \\n\\n\\n\\n</div>  \\n\\n\"","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VwbG9hZC1yZXN1bWUvdXBsb2FkLXJlc3VtZS5jb21wb25lbnQuc2NzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-upload-resume',\n  templateUrl: './upload-resume.component.html',\n  styleUrls: ['./upload-resume.component.scss']\n})\nexport class UploadResumeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\nimport { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}